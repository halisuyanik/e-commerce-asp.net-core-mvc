// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using on_e_commerce.Models;

namespace on_e_commerce.Migrations
{
    [DbContext(typeof(dbEticaretContext))]
    [Migration("20211217010153_IdentityScaffoldingMig")]
    partial class IdentityScaffoldingMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Turkish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("on_e_commerce.Models.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("on_e_commerce.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("on_e_commerce.Models.Ilceler", b =>
                {
                    b.Property<int>("IlceId")
                        .HasColumnType("int")
                        .HasColumnName("ilceId");

                    b.Property<string>("IlceAdi")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("SehirAdi")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.HasKey("IlceId");

                    b.HasIndex("SehirId");

                    b.ToTable("Ilceler");
                });

            modelBuilder.Entity("on_e_commerce.Models.Sehirler", b =>
                {
                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.Property<byte>("PlakaNo")
                        .HasColumnType("tinyint");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("SehirAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TelefonKodu")
                        .HasColumnType("int");

                    b.HasKey("SehirId");

                    b.ToTable("Sehirler");
                });

            modelBuilder.Entity("on_e_commerce.Models.SemtMah", b =>
                {
                    b.Property<int>("SemtMahId")
                        .HasColumnType("int");

                    b.Property<int>("IlceId")
                        .HasColumnType("int")
                        .HasColumnName("ilceId");

                    b.Property<string>("MahalleAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostaKodu")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("SemtAdi")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("SemtMahId");

                    b.HasIndex("IlceId");

                    b.ToTable("SemtMah");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblKategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("KategoriAdi")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("KategoriResim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategoriId")
                        .HasName("PK__Tbl_Kate__1782CC7219BD4E2E");

                    b.HasIndex(new[] { "KategoriAdi" }, "UQ__Tbl_Kate__110FF79E49F82EF3")
                        .IsUnique()
                        .HasFilter("[KategoriAdi] IS NOT NULL");

                    b.ToTable("TblKategori");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblRoller", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RolAdi")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("RolId")
                        .HasName("PK__Tbl_Roll__F92302F15DF9128C");

                    b.HasIndex(new[] { "RolAdi" }, "UQ__Tbl_Roll__85F2635D39D9BE7B")
                        .IsUnique()
                        .HasFilter("[RolAdi] IS NOT NULL");

                    b.ToTable("TblRoller");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSepet", b =>
                {
                    b.Property<int>("SepetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SepetDurumuId")
                        .HasColumnType("int");

                    b.Property<int?>("SiparisMiktari")
                        .HasColumnType("int");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.Property<int?>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("SepetId")
                        .HasName("PK__tbl_Sepe__97CA09F36BC2F035");

                    b.HasIndex("UrunId");

                    b.ToTable("TblSepet");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSepetDurumu", b =>
                {
                    b.Property<int>("SepetDurumuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SepetDurumu")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("SepetDurumuId")
                        .HasName("PK__tbl_Sepe__AEE24F2C43718A67");

                    b.ToTable("TblSepetDurumu");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSiparisDetay", b =>
                {
                    b.Property<int>("SiparisDetayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ilce")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OdemeTipi")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PostaKodu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sehir")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SiparisBarkod")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("SiparisDurumu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SiparisTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Soyad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TblUyeUyeId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<int?>("ToplamFiyat")
                        .HasColumnType("int");

                    b.Property<string>("Ulke")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UyeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiparisDetayId")
                        .HasName("PK__Tbl_Sipa__DA4BDFD21CD8D989");

                    b.HasIndex("SiparisDurumu");

                    b.HasIndex("TblUyeUyeId");

                    b.HasIndex("UserId");

                    b.ToTable("TblSiparisDetay");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSiparisDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SiparisDurumu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TblSiparisDurumu");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSiparisUrunleri", b =>
                {
                    b.Property<int>("SiparisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("SiparisBarkod")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("SiparisDetayId")
                        .HasColumnType("int");

                    b.Property<int?>("TblUyeUyeId")
                        .HasColumnType("int");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UyeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiparisId")
                        .HasName("PK__Tbl_Sipa__3214EC07D9F30590");

                    b.HasIndex("TblUyeUyeId");

                    b.HasIndex("UrunId");

                    b.HasIndex("UserId");

                    b.ToTable("TblSiparisUrunleri");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSlideImage", b =>
                {
                    b.Property<int>("SlideId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SlideImage")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SlideTitle")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("SlideId")
                        .HasName("PK__Tbl_Slid__9E7CB6509A7F186A");

                    b.ToTable("TblSlideImage");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblUrun", b =>
                {
                    b.Property<int>("UrunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acıklama")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Agırlık")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("decimal(18,0)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int?>("Miktar")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime");

                    b.Property<bool?>("OneCıkan")
                        .HasColumnType("bit");

                    b.Property<string>("UrunAdi")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("UrunResim")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("UrunId")
                        .HasName("PK__Tbl_Urun__623D366BE4F17C68");

                    b.HasIndex("KategoriId");

                    b.HasIndex(new[] { "UrunAdi" }, "UQ__Tbl_Urun__32349D21E48641E0")
                        .IsUnique()
                        .HasFilter("[UrunAdi] IS NOT NULL");

                    b.ToTable("TblUrun");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblUye", b =>
                {
                    b.Property<int>("UyeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adi")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Adres")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("DegistirilmeTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OlusturulmaTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("Sifre")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Yetkiid")
                        .HasColumnType("int")
                        .HasColumnName("yetkiid");

                    b.HasKey("UyeId")
                        .HasName("PK__Tbl_Uye__76F7D98F3255BF47");

                    b.HasIndex("Yetkiid");

                    b.HasIndex(new[] { "Email" }, "UQ__Tbl_Uye__A9D105347B10258B")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("TblUye");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblUyeRol", b =>
                {
                    b.Property<int>("UyeRolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.Property<int?>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("UyeRolId")
                        .HasName("PK__Tbl_UyeR__E08A6574BCDD1057");

                    b.ToTable("TblUyeRol");
                });

            modelBuilder.Entity("on_e_commerce.Models.Ulkeler", b =>
                {
                    b.Property<int>("UlkeId")
                        .HasColumnType("int");

                    b.Property<string>("IkiliKod")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("TelKodu")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("UcluKod")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("UlkeAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UlkeId");

                    b.ToTable("Ulkeler");
                });

            modelBuilder.Entity("on_e_commerce.Models.UserAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("UserAddress");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("on_e_commerce.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("on_e_commerce.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("on_e_commerce.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("on_e_commerce.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("on_e_commerce.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("on_e_commerce.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("on_e_commerce.Models.Ilceler", b =>
                {
                    b.HasOne("on_e_commerce.Models.Sehirler", "Sehir")
                        .WithMany("Ilcelers")
                        .HasForeignKey("SehirId")
                        .HasConstraintName("FK_Ilceler_Sehirler")
                        .IsRequired();

                    b.Navigation("Sehir");
                });

            modelBuilder.Entity("on_e_commerce.Models.SemtMah", b =>
                {
                    b.HasOne("on_e_commerce.Models.Ilceler", "Ilce")
                        .WithMany("SemtMahs")
                        .HasForeignKey("IlceId")
                        .HasConstraintName("FK_SemtMah_Ilceler")
                        .IsRequired();

                    b.Navigation("Ilce");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSepet", b =>
                {
                    b.HasOne("on_e_commerce.Models.TblUrun", "Urun")
                        .WithMany("TblSepets")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK__tbl_Sepet__UrunI__38996AB5");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSiparisDetay", b =>
                {
                    b.HasOne("on_e_commerce.Models.TblSiparisDurumu", "SiparisDurumuNavigation")
                        .WithMany("TblSiparisDetays")
                        .HasForeignKey("SiparisDurumu")
                        .HasConstraintName("FK_Tbl_SiparisDetay_Tbl_SiparisDurumu");

                    b.HasOne("on_e_commerce.Models.TblUye", null)
                        .WithMany("TblSiparisDetays")
                        .HasForeignKey("TblUyeUyeId");

                    b.HasOne("on_e_commerce.Models.AppUser", "User")
                        .WithMany("TblSiparisDetays")
                        .HasForeignKey("UserId");

                    b.Navigation("SiparisDurumuNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSiparisUrunleri", b =>
                {
                    b.HasOne("on_e_commerce.Models.TblUye", null)
                        .WithMany("TblSiparisUrunleris")
                        .HasForeignKey("TblUyeUyeId");

                    b.HasOne("on_e_commerce.Models.TblUrun", "Urun")
                        .WithMany("TblSiparisUrunleris")
                        .HasForeignKey("UrunId")
                        .HasConstraintName("FK_Tbl_SiparisUrunleri_Tbl_Urun");

                    b.HasOne("on_e_commerce.Models.AppUser", "User")
                        .WithMany("TblSiparisUrunleris")
                        .HasForeignKey("UserId");

                    b.Navigation("Urun");

                    b.Navigation("User");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblUrun", b =>
                {
                    b.HasOne("on_e_commerce.Models.TblKategori", "Kategori")
                        .WithMany("TblUruns")
                        .HasForeignKey("KategoriId")
                        .HasConstraintName("FK__Tbl_Urun__Katego__398D8EEE");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblUye", b =>
                {
                    b.HasOne("on_e_commerce.Models.TblRoller", "Yetki")
                        .WithMany("TblUyes")
                        .HasForeignKey("Yetkiid")
                        .HasConstraintName("FK_Tbl_Uye_Tbl_Roller");

                    b.Navigation("Yetki");
                });

            modelBuilder.Entity("on_e_commerce.Models.UserAddress", b =>
                {
                    b.HasOne("on_e_commerce.Models.AppUser", null)
                        .WithMany("Adresler")
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("on_e_commerce.Models.AppUser", b =>
                {
                    b.Navigation("Adresler");

                    b.Navigation("TblSiparisDetays");

                    b.Navigation("TblSiparisUrunleris");
                });

            modelBuilder.Entity("on_e_commerce.Models.Ilceler", b =>
                {
                    b.Navigation("SemtMahs");
                });

            modelBuilder.Entity("on_e_commerce.Models.Sehirler", b =>
                {
                    b.Navigation("Ilcelers");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblKategori", b =>
                {
                    b.Navigation("TblUruns");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblRoller", b =>
                {
                    b.Navigation("TblUyes");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblSiparisDurumu", b =>
                {
                    b.Navigation("TblSiparisDetays");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblUrun", b =>
                {
                    b.Navigation("TblSepets");

                    b.Navigation("TblSiparisUrunleris");
                });

            modelBuilder.Entity("on_e_commerce.Models.TblUye", b =>
                {
                    b.Navigation("TblSiparisDetays");

                    b.Navigation("TblSiparisUrunleris");
                });
#pragma warning restore 612, 618
        }
    }
}
